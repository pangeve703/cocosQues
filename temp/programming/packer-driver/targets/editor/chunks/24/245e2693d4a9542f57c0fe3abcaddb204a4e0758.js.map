{"version":3,"sources":["file:///Users/eve/chat-server/cocosQues/assets/script/CountdownTimer.ts"],"names":["_decorator","Component","Label","Node","Sprite","AnimationScript","BetZoneComponent","ccclass","property","CountdownTimer","elapsedTime","isPulsing","start","startTimer","timerSprite","fillRange","updateLabel","duration","animationScript","fadeIn","timer","schedule","updateTimer","deltaTime","remainingTime","Math","max","ceil","pulseAnimation","timerLabel","node","stopPulseAnimation","unschedule","onTimerComplete","time","string","fadeOut","scheduleOnce","clearChipsInAllZones","tiles","children","forEach","childNode","betZoneComponent","getComponentInChildren","clearAllChips","update"],"mappings":"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","sourcesContent":["import { _decorator, Component, Label, Node, Sprite, tween } from 'cc';\nimport { AnimationScript } from './AnimationScript';\nimport { BetZoneComponent } from './BetZoneComponent';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CountdownTimer')\nexport class CountdownTimer extends Component {\n  @property(Sprite)\n  timerSprite: Sprite = null;\n  @property(Label)\n  timerLabel: Label = null;\n  @property\n  duration: number = 10;\n  @property(AnimationScript)\n  animationScript: AnimationScript = null;\n  @property(Node)\n  timer: Node = null;\n  @property(Node)\n  tiles: Node = null;\n\n  private elapsedTime: number = 0;\n  private isPulsing: boolean = false;\n  start() {\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.elapsedTime = 0;\n    this.timerSprite.fillRange = 1;\n    this.updateLabel(this.duration);\n    this.animationScript.fadeIn(this.timer, 1, () => {\n      this.schedule(this.updateTimer, 0); // 0 means run every frame\n    });\n  }\n\n  updateTimer(deltaTime: number) {\n    this.elapsedTime += deltaTime;\n\n    const remainingTime = Math.max(this.duration - this.elapsedTime, 0);\n    this.timerSprite.fillRange = remainingTime / this.duration;\n    this.updateLabel(Math.ceil(remainingTime));\n\n    if (remainingTime <= 3 && !this.isPulsing) {\n      this.isPulsing = true;\n      this.animationScript.pulseAnimation(this.timerLabel.node);\n    }\n\n    if (remainingTime <= 0) {\n      this.animationScript.stopPulseAnimation(this.timerLabel.node);\n      this.unschedule(this.updateTimer);\n      this.onTimerComplete();\n      this.isPulsing = false;\n    }\n  }\n\n  updateLabel(time: number) {\n    this.timerLabel.string = `${time}`;\n  }\n\n  onTimerComplete() {\n    this.animationScript.fadeOut(this.timer, 1, () => {\n      this.scheduleOnce(() => {\n        this.startTimer();\n      }, 10);\n    });\n    this.clearChipsInAllZones();\n  }\n\n  clearChipsInAllZones() {\n    this.tiles.children.forEach((childNode) => {\n      const betZoneComponent =\n        childNode.getComponentInChildren(BetZoneComponent);\n      if (betZoneComponent) {\n        betZoneComponent.clearAllChips();\n      }\n    });\n  }\n\n  update(deltaTime: number) {}\n}\n"]}