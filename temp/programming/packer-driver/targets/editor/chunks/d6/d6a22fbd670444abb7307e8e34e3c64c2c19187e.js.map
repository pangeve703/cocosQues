{"version":3,"sources":["file:///Users/eve/chat-server/cocosQues/assets/script/BetZoneComponent.ts"],"names":["_decorator","Component","instantiate","Label","Node","Prefab","resources","tween","Vec3","ChipConfig","ccclass","property","BetZoneComponent","chipManager","activeChips","totalValue","lastBet","previousTotal","start","chipManagerNode","getComponent","node","on","EventType","TOUCH_START","placeChip","chipNode","selectedChip","children","chipComponent","chipValue","updateLabel","updateChips","totalStakeLabel","string","toString","labelNode","active","forEach","chip","index","to","scale","easing","call","destroy","remainingValue","sortedChips","sort","a","b","value","stackHeight","chipConfig","load","prefabPath","err","prefab","animateChipPlacement","nodePosition","getPosition","abovePosition","x","y","z","targetPosition","setScale","setPosition","parent","addChild","push","position","clearAllChips","worldPosition","betAgain"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Component,\n  instantiate,\n  Label,\n  Node,\n  Prefab,\n  resources,\n  tween,\n  Vec3,\n} from 'cc';\nimport { ChipConfig } from './Config';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BetZoneComponent')\nexport class BetZoneComponent extends Component {\n  @property(Label)\n  zoneLabel: Label = null;\n  @property(Label)\n  ratioLabel: Label = null;\n  @property(Node)\n  chipManagerNode: Node = null;\n  @property(Label)\n  totalStakeLabel: Label = null;\n  @property(Node)\n  labelNode: Node = null;\n\n  private chipManager: any = null;\n  private activeChips: Node[] = [];\n  private totalValue: number = 0;\n  private lastBet: Node[] = [];\n  private previousTotal: number = 0;\n\n  start() {\n    if (this.chipManagerNode) {\n      this.chipManager = this.chipManagerNode.getComponent('ChipManager');\n    }\n\n    this.node.on(Node.EventType.TOUCH_START, this.placeChip, this);\n  }\n\n  placeChip() {\n    const chipNode = instantiate(this.chipManager.selectedChip.children[0]);\n\n    const chipComponent = chipNode.getComponent('ChipComponent');\n    const chipValue = chipComponent?.chipValue || 0;\n\n    this.totalValue += chipValue;\n    this.updateLabel();\n    this.updateChips();\n  }\n\n  updateLabel() {\n    this.totalStakeLabel.string = this.totalValue.toString();\n    if (this.totalValue > 0) {\n      this.labelNode.active = true;\n    } else {\n      this.labelNode.active = false;\n    }\n  }\n\n  updateChips() {\n    this.activeChips.forEach((chip, index) => {\n      tween(chip)\n        .to(0.3, { scale: new Vec3(0, 0, 0) }, { easing: 'cubicInOut' })\n        .call(() => chip.destroy())\n        .start();\n    });\n\n    this.activeChips = [];\n    let remainingValue = this.totalValue;\n\n    const sortedChips = ChipConfig.sort((a, b) => b.value - a.value);\n    let stackHeight = 0;\n\n    sortedChips.forEach((chipConfig) => {\n      while (remainingValue >= chipConfig.value) {\n        remainingValue -= chipConfig.value;\n\n        resources.load(chipConfig.prefabPath, Prefab, (err, prefab) => {\n          if (err) {\n            return;\n          }\n\n          const chipNode = instantiate(prefab);\n          this.animateChipPlacement(chipNode, stackHeight);\n          stackHeight += 2;\n        });\n      }\n    });\n  }\n\n  animateChipPlacement(chipNode: Node, stackHeight: number) {\n    const nodePosition = this.node.getPosition();\n    const abovePosition = new Vec3(\n      nodePosition.x,\n      nodePosition.y + 20,\n      nodePosition.z\n    );\n    const targetPosition = new Vec3(\n      nodePosition.x,\n      nodePosition.y + stackHeight,\n      nodePosition.z\n    );\n    chipNode.setScale(0.6, 0.6, 0.6);\n    chipNode.setPosition(abovePosition);\n    this.node.parent.addChild(chipNode);\n    this.activeChips.push(chipNode);\n\n    tween(chipNode)\n      .to(\n        0.3,\n        { position: targetPosition, scale: new Vec3(0.4, 0.4, 0.4) },\n        { easing: 'bounceOut' }\n      )\n      .start();\n  }\n\n  clearAllChips() {\n    this.activeChips.forEach((chip, index) => {\n      tween(chip)\n        .to(\n          0.3,\n          { worldPosition: new Vec3(50, 0, 0) },\n          { easing: 'cubicInOut' }\n        )\n        .call(() => chip.destroy())\n        .start();\n    });\n\n    this.lastBet = this.activeChips;\n    this.activeChips = [];\n    this.previousTotal = this.totalValue;\n    this.totalValue = 0;\n    this.updateLabel();\n  }\n\n  betAgain() {\n    if (this.totalValue == this.previousTotal) return;\n    this.activeChips.forEach((chip) => {\n      this.lastBet.push(chip);\n    });\n    this.totalValue = this.previousTotal;\n\n    this.updateChips();\n    this.updateLabel();\n  }\n}\n"]}